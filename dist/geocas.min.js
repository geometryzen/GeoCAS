/*! geocas 2019-04-14 */
!function(a,b){var c,d,b,e=a.define;!function(a){function e(a,b){return v.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=b&&b.split("/"),p=t.map,q=p&&p["*"]||{};if(a){for(a=a.split("/"),g=a.length-1,t.nodeIdCompat&&x.test(a[g])&&(a[g]=a[g].replace(x,"")),"."===a[0].charAt(0)&&o&&(n=o.slice(0,o.length-1),a=n.concat(a)),k=0;k<a.length;k++)if(m=a[k],"."===m)a.splice(k,1),k-=1;else if(".."===m){if(0===k||1===k&&".."===a[2]||".."===a[k-1])continue;k>0&&(a.splice(k-1,2),k-=2)}a=a.join("/")}if((o||q)&&p){for(c=a.split("/"),k=c.length;k>0;k-=1){if(d=c.slice(0,k).join("/"),o)for(l=o.length;l>0;l-=1)if(e=p[o.slice(0,l).join("/")],e&&(e=e[d])){f=e,h=k;break}if(f)break;!i&&q&&q[d]&&(i=q[d],j=k)}!f&&i&&(f=i,h=j),f&&(c.splice(0,h,f),a=c.join("/"))}return a}function g(b,c){return function(){var d=w.call(arguments,0);return"string"!=typeof d[0]&&1===d.length&&d.push(null),o.apply(a,d.concat([b,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){r[a]=b}}function j(b){if(e(s,b)){var c=s[b];delete s[b],u[b]=!0,n.apply(a,c)}if(!e(r,b)&&!e(u,b))throw new Error("No "+b);return r[b]}function k(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return a?k(a):[]}function m(a){return function(){return t&&t.config&&t.config[a]||{}}}var n,o,p,q,r={},s={},t={},u={},v=Object.prototype.hasOwnProperty,w=[].slice,x=/\.js$/;p=function(a,b){var c,d=k(a),e=d[0],g=b[1];return a=d[1],e&&(e=f(e,g),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(g)):f(a,g):(a=f(a,g),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+"!"+a:a,n:a,pr:e,p:c}},q={require:function(a){return g(a)},exports:function(a){var b=r[a];return"undefined"!=typeof b?b:r[a]={}},module:function(a){return{id:a,uri:"",exports:r[a],config:m(a)}}},n=function(b,c,d,f){var h,k,m,n,o,t,v,w=[],x=typeof d;if(f=f||b,t=l(f),"undefined"===x||"function"===x){for(c=!c.length&&d.length?["require","exports","module"]:c,o=0;o<c.length;o+=1)if(n=p(c[o],t),k=n.f,"require"===k)w[o]=q.require(b);else if("exports"===k)w[o]=q.exports(b),v=!0;else if("module"===k)h=w[o]=q.module(b);else if(e(r,k)||e(s,k)||e(u,k))w[o]=j(k);else{if(!n.p)throw new Error(b+" missing "+k);n.p.load(n.n,g(f,!0),i(k),{}),w[o]=r[k]}m=d?d.apply(r[b],w):void 0,b&&(h&&h.exports!==a&&h.exports!==r[b]?r[b]=h.exports:m===a&&v||(r[b]=m))}else b&&(r[b]=d)},c=d=o=function(b,c,d,e,f){if("string"==typeof b)return q[b]?q[b](c):j(p(b,l(c)).f);if(!b.splice){if(t=b,t.deps&&o(t.deps,t.callback),!c)return;c.splice?(b=c,c=d,d=null):b=a}return c=c||function(){},"function"==typeof d&&(d=e,e=f),e?n(a,b,c,d):setTimeout(function(){n(a,b,c,d)},4),o},o.config=function(a){return o(a)},c._defined=r,b=function(a,b,c){if("string"!=typeof a)throw new Error("See almond README: incorrect module build, no module name");b.splice||(c=b,b=[]),e(r,a)||e(s,a)||(s[a]=[a,b,c])},b.amd={jQuery:!0}}(),b("../bower_components/almond/almond",function(){}),b("geocas/mother/bitCount",["require","exports"],function(a,b){"use strict";function c(a){return a-=a>>1&1431655765,a=(858993459&a)+(a>>2&858993459),a=a+(a>>4)&252645135,a+=a>>8,a+=a>>16,63&a}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/canonicalReorderingSign",["require","exports","./bitCount"],function(a,b,c){"use strict";function d(a,b){a>>=1;for(var d=0;0!==a;)d+=c["default"](a&b),a>>=1;return 0===(1&d)?1:-1}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/checks/isUndefined",["require","exports"],function(a,b){"use strict";function c(a){return"undefined"==typeof a}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/minusOnePow",["require","exports"],function(a,b){"use strict";function c(a){return 0===(1&a)?1:-1}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/Blade",["require","exports","./bitCount","./canonicalReorderingSign","../checks/isUndefined","./minusOnePow"],function(a,b,c,d,e,f){"use strict";function g(a,b,i){var j={get bitmap(){return a},get weight(){return b},__neg__:function(){return g(a,i.neg(b),i)},__vbar__:function(c,d){return a!==c.bitmap?g(h,i.zero,i):g(h,i.mul(b,c.weight),i)},__wedge__:function(c){if(a&c.bitmap)return g(h,i.zero,i);var e=a^c.bitmap,f=d["default"](a,c.bitmap),j=i.mul(b,c.weight);return g(e,f>0?j:i.neg(j),i)},grade:function(){return c["default"](a)},reverse:function(){var c=j.grade(),d=f["default"](c*(c-1)/2);return g(a,d>0?b:i.neg(b),i)},gradeInversion:function(){var c=j.grade(),d=f["default"](c);return g(a,d>0?b:i.neg(b),i)},cliffordConjugate:function(){var c=j.grade(),d=f["default"](c*(c+1)/2);return g(a,d>0?b:i.neg(b),i)},zero:function(){return g(h,i.zero,i)},asString:function(c){for(var d="",f=1,g=a;0!==g;)0!==(1&g)&&(d.length>0&&(d+=" ^ "),e["default"](c)||null===c||f>c.length||null==c[f-1]?d=d+"e"+f:d+=c[f-1]),g>>=1,f++;return 0===d.length?i.asString(b):i.isOne(b)?d:i.asString(b)+" * "+d},toString:function(){return j.asString(void 0)}};return j}Object.defineProperty(b,"__esModule",{value:!0});var h=0;b["default"]=g}),b("geocas/checks/isNumber",["require","exports"],function(a,b){"use strict";function c(a){return"number"==typeof a}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/Complex",["require","exports","../checks/isNumber"],function(a,b,c){"use strict";function d(a,b){var e={get x(){return a},get y(){return b},__abs__:function(){return d(Math.sqrt(a*a+b*b),0)},__add__:function(c){return d(a+c.x,b+c.y)},__sub__:function(c){return d(a-c.x,b-c.y)},__mul__:function(e){return c["default"](e)?d(a*e,b*e):d(a*e.x-b*e.y,b*e.x+a*e.y)},__div__:function(e){if(c["default"](e))return d(a/e,b/e);var f=e.x*e.x+e.y*e.y;return d((a*e.x+b*e.y)/f,(b*e.x-a*e.y)/f)},__neg__:function(){return d(-a,-b)},toString:function(){return"["+a+", "+b+"]"},__cos__:function(){throw new Error("TODO: cos")},__sin__:function(){throw new Error("TODO: sin")}};return e}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/checks/mustSatisfy",["require","exports"],function(a,b){"use strict";function c(a,b,c,d){if(!b){var e=c?c():"satisfy some condition",f=d?" in "+d():"";throw new Error(a+" must "+e+f+".")}}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/checks/mustBeNumber",["require","exports","../checks/mustSatisfy","../checks/isNumber"],function(a,b,c,d){"use strict";function e(){return"be a `number`"}function f(a,b,f){return c["default"](a,d["default"](b),e,f),b}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=f}),b("geocas/mother/ComplexFieldAdapter",["require","exports","./Complex","../checks/isNumber","../checks/mustBeNumber"],function(a,b,c,d,e){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var f=c["default"](0,0),g=function(){function a(a){void 0===a&&(a=1e-6),this._ε=c["default"](e["default"]("ε",a),0)}return Object.defineProperty(a.prototype,"ε",{get:function(){return this._ε},enumerable:!0,configurable:!0}),a.prototype.abs=function(a){return a.__abs__()},a.prototype.add=function(a,b){return a.__add__(b)},a.prototype.eq=function(a,b){return a.x===b.x&&a.y===b.y},a.prototype.ne=function(a,b){return a.x!==b.x||a.y!==b.y},a.prototype.le=function(a,b){return a.x<=b.x},a.prototype.lt=function(a,b){return a.x<b.x},a.prototype.ge=function(a,b){return a.x>=b.x},a.prototype.gt=function(a,b){return a.x>b.x},a.prototype.sub=function(a,b){return a.__sub__(b)},a.prototype.max=function(a,b){return a.x>=b.x?a:b},a.prototype.min=function(a,b){return a.x<=b.x?a:b},a.prototype.mul=function(a,b){return a.__mul__(b)},a.prototype.mulByNumber=function(a,b){return a.__mul__(b)},a.prototype.div=function(a,b){return a.__div__(b)},a.prototype.neg=function(a){return a.__neg__()},a.prototype.asString=function(a){return a.toString()},a.prototype.cos=function(a){return a.__cos__()},a.prototype.isField=function(a){return d["default"](a.x)&&d["default"](a.y)},a.prototype.isOne=function(a){return 1===a.x&&0===a.y},a.prototype.isZero=function(a){return 0===a.x&&0===a.y},Object.defineProperty(a.prototype,"one",{get:function(){return c["default"](1,0)},enumerable:!0,configurable:!0}),a.prototype.sin=function(a){return a.__sin__()},a.prototype.sqrt=function(a){if(0===a.x){if(0===a.y)return f;throw new Error("TODO: sqrt"+a.toString())}if(0===a.y)return a.x>0?c["default"](Math.sqrt(a.x),0):c["default"](0,Math.sqrt(-a.x));throw new Error("TODO: sqrt"+a.toString())},Object.defineProperty(a.prototype,"zero",{get:function(){return f},enumerable:!0,configurable:!0}),a}();b["default"]=g}),b("geocas/mother/squaredNorm",["require","exports"],function(a,b){"use strict";function c(a){return a.scp(a.rev())}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/norm",["require","exports","./squaredNorm"],function(a,b,c){"use strict";function d(a){return c["default"](a).sqrt()}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/cosineOfAngleBetweenBlades",["require","exports","./norm"],function(a,b,c){"use strict";function d(a,b){var d=c["default"](a).scalarCoordinate(),e=c["default"](b).scalarCoordinate();return a.scp(b.rev()).divByScalar(d).divByScalar(e)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/NumberFieldAdapter",["require","exports","../checks/mustBeNumber"],function(a,b,c){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var d=function(){function a(a){void 0===a&&(a=1e-6),this._ε=c["default"]("ε",a)}return Object.defineProperty(a.prototype,"ε",{get:function(){return this._ε},enumerable:!0,configurable:!0}),a.prototype.abs=function(a){return Math.abs(a)},a.prototype.add=function(a,b){return a+b},a.prototype.eq=function(a,b){return a===b},a.prototype.ne=function(a,b){return a!==b},a.prototype.le=function(a,b){return a<=b},a.prototype.lt=function(a,b){return a<b},a.prototype.ge=function(a,b){return a>=b},a.prototype.gt=function(a,b){return a>b},a.prototype.sub=function(a,b){return a-b},a.prototype.max=function(a,b){return Math.max(a,b)},a.prototype.min=function(a,b){return Math.min(a,b)},a.prototype.mul=function(a,b){return a*b},a.prototype.mulByNumber=function(a,b){return a*b},a.prototype.div=function(a,b){return a/b},a.prototype.neg=function(a){return-a},a.prototype.asString=function(a){return a.toString()},a.prototype.cos=function(a){return Math.cos(a)},a.prototype.isField=function(a){return"number"==typeof a},a.prototype.isOne=function(a){return 1===a},a.prototype.isZero=function(a){return 0===a},Object.defineProperty(a.prototype,"one",{get:function(){return 1},enumerable:!0,configurable:!0}),a.prototype.sin=function(a){return Math.sin(a)},a.prototype.sqrt=function(a){return Math.sqrt(a)},Object.defineProperty(a.prototype,"zero",{get:function(){return 0},enumerable:!0,configurable:!0}),a}();b["default"]=d}),b("geocas/mother/orthoFramesToVersor",["require","exports","./cosineOfAngleBetweenBlades"],function(a,b,c){"use strict";function d(a,b,h,i){if(a.length>0){var j=g(a,b,i),k=a[j],l=b[j],m=k.sub(l),n=i.field,o=n.mulByNumber(n.one,1e-6),p=c["default"](k,l).sub(i.one).scalarCoordinate(),q=n.lt(n.abs(p),o);if(q)return d(f(a,j),f(b,j),h,i);var r=m.scp(m).scalarCoordinate(),s=e(h,m.divByScalar(i.field.sqrt(r)));return d(f(a,j).map(function(a){return m.mul(a.mul(m)).neg().divByScalar(r)}),f(b,j),s,i)}return h}function e(a,b){var c=[];c.push(b);for(var d=0;d<a.length;d++)c.push(a[d]);return c}function f(a,b){for(var c=[],d=0;d<a.length;d++)d!==b&&c.push(a[d]);return c}function g(a,b,c){for(var d=a.length,e=c.zero,f=0,g=0;g<d;g++){var h=a[g].sub(b[g]),i=h.scp(h.rev()).scalarCoordinate();c.field.gt(i,e.scalarCoordinate())&&(f=g)}return f}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/gpE",["require","exports","./Blade","./canonicalReorderingSign"],function(a,b,c,d){"use strict";function e(a,b,e){var f=a.bitmap^b.bitmap,g=d["default"](a.bitmap,b.bitmap),h=e.mul(a.weight,b.weight);return g>0?c["default"](f,h,e):c["default"](f,e.neg(h),e)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/gpL",["require","exports","./Blade","./gpE"],function(a,b,c,d){"use strict";function e(a,b,e,f){for(var g=d["default"](a,b,f),h=g.weight,i=a.bitmap&b.bitmap,j=0;0!==i;)0!==(1&i)&&(h=f.mulByNumber(h,e[j])),j++,i>>=1;return c["default"](g.bitmap,h,f)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/bladesToArray",["require","exports"],function(a,b){"use strict";function c(a){for(var b=Object.keys(a),c=[],d=0;d<b.length;d++){var e=b[d],f=a[e];c.push(f)}return c}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/simplify",["require","exports","./Blade","./bladesToArray"],function(a,b,c,d){"use strict";function e(a,b){for(var e={},f=0;f<a.length;f++){var g=a[f],h=e[g.bitmap];if(h){var i=b.add(h.weight,g.weight);b.isZero(i)?delete e[g.bitmap]:e[g.bitmap]=c["default"](g.bitmap,i,b)}else b.isZero(g.weight)||(e[g.bitmap]=g)}return d["default"](e)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/gpG",["require","exports","./gpL","./simplify"],function(a,b,c,d){"use strict";function e(a,b,e,f){for(var g=e.toEigenBasis(a),h=e.toEigenBasis(b),i=e.getEigenMetric(),j=[],k=0;k<g.length;k++)for(var l=0;l<h.length;l++)j.push(c["default"](g[k],h[l],i,f));return e.toMetricBasis(d["default"](j,f))}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/grade",["require","exports","./bitCount"],function(a,b,c){"use strict";function d(a){return c["default"](a)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/lcoE",["require","exports","./gpE","./grade"],function(a,b,c,d){"use strict";function e(a,b,e){var f=a.grade(),g=b.grade();if(f>g)return a.zero();var h=a.bitmap^b.bitmap,i=d["default"](h);return i!==g-f?a.zero():c["default"](a,b,e)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/lcoL",["require","exports","./gpL","./grade"],function(a,b,c,d){"use strict";function e(a,b,e,f){var g=a.grade(),h=b.grade();if(g>h)return a.zero();var i=a.bitmap^b.bitmap,j=d["default"](i);return j!==h-g?a.zero():c["default"](a,b,e,f)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/lcoG",["require","exports","./gpG","./grade"],function(a,b,c,d){"use strict";function e(a,b,e,f){var g=a.grade(),h=b.grade();if(g>h)return[];var i=a.bitmap^b.bitmap,j=d["default"](i);return j!==h-g?[]:c["default"](a,b,e,f)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/rcoE",["require","exports","./gpE","./grade"],function(a,b,c,d){"use strict";function e(a,b,e){var f=a.grade(),g=b.grade();if(f<g)return a.zero();var h=a.bitmap^b.bitmap,i=d["default"](h);return i!==f-g?a.zero():c["default"](a,b,e)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/rcoL",["require","exports","./gpL","./grade"],function(a,b,c,d){"use strict";function e(a,b,e,f){var g=a.grade(),h=b.grade();if(g<h)return a.zero();var i=a.bitmap^b.bitmap,j=d["default"](i);return j!==g-h?a.zero():c["default"](a,b,e,f)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/mother/rcoG",["require","exports","./gpG","./grade"],function(a,b,c,d){"use strict";function e(a,b,e,f){var g=a.grade(),h=b.grade();if(g<h)return[];var i=a.bitmap^b.bitmap,j=d["default"](i);return j!==g-h?[]:c["default"](a,b,e,f)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=e}),b("geocas/checks/isArray",["require","exports"],function(a,b){"use strict";function c(a){return"[object Array]"===Object.prototype.toString.call(a)}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/checks/isDefined",["require","exports"],function(a,b){"use strict";function c(a){return"undefined"!=typeof a}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/isScalar",["require","exports"],function(a,b){"use strict";function c(a){for(var b=a.blades,c=b.length,d=0;d<c;d++){var e=b[d];if(0!==e.bitmap)return!1}return!0}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/checks/isString",["require","exports"],function(a,b){"use strict";function c(a){return"string"==typeof a}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=c}),b("geocas/mother/sortBlades",["require","exports"],function(a,b){"use strict";function c(a,b){return a.bitmap<b.bitmap?-1:a.bitmap>b.bitmap?1:0}function d(a){for(var b=[],d=0;d<a.length;d++){var e=a[d];b.push(e)}return b.sort(c),b}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/multivectorEQ",["require","exports","./sortBlades"],function(a,b,c){"use strict";function d(a,b,d){if(a.blades.length===b.blades.length){for(var e=c["default"](a.blades),f=c["default"](b.blades),g=e.length,h=0;h<g;h++){var i=e[h],j=f[h];if(i.bitmap!==j.bitmap)return!1;if(d.ne(i.weight,j.weight))return!1}return!0}return!1}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/multivectorGE",["require","exports","./isScalar"],function(a,b,c){"use strict";function d(a,b,d){if(c["default"](a)&&c["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return d.ge(e,f)}throw new Error(a+" >= "+b+" is not implemented.")}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/multivectorGT",["require","exports","./isScalar"],function(a,b,c){"use strict";function d(a,b,d){if(c["default"](a)&&c["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return d.gt(e,f)}throw new Error(a+" > "+b+" is not implemented.")}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/multivectorLE",["require","exports","./isScalar"],function(a,b,c){"use strict";function d(a,b,d){if(c["default"](a)&&c["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return d.le(e,f)}throw new Error(a+" <= "+b+" is not implemented.")}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/mother/multivectorLT",["require","exports","./isScalar"],function(a,b,c){"use strict";function d(a,b,d){if(c["default"](a)&&c["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return d.lt(e,f)}throw new Error(a+" < "+b+" is not implemented.")}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/checks/mustBeDefined",["require","exports","../checks/mustSatisfy","../checks/isDefined"],function(a,b,c,d){"use strict";function e(){return"not be 'undefined'"}function f(a,b,f){return c["default"](a,d["default"](b),e,f),b}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=f}),b("geocas/checks/isInteger",["require","exports","../checks/isNumber"],function(a,b,c){"use strict";function d(a){return c["default"](a)&&a%1===0}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=d}),b("geocas/checks/mustBeInteger",["require","exports","../checks/mustSatisfy","../checks/isInteger"],function(a,b,c,d){"use strict";function e(){return"be an integer"}function f(a,b,f){return c["default"](a,d["default"](b),e,f),b}Object.defineProperty(b,"__esModule",{value:!0}),b["default"]=f}),b("geocas/mother/Algebra",["require","exports","./Blade","./gpE","./gpL","./gpG","./lcoE","./lcoL","./lcoG","./rcoE","./rcoL","./rcoG","../checks/isArray","../checks/isDefined","../checks/isNumber","./isScalar","../checks/isString","../checks/isUndefined","./multivectorEQ","./multivectorGE","./multivectorGT","./multivectorLE","./multivectorLT","../checks/mustBeDefined","../checks/mustBeInteger","../checks/mustSatisfy","./simplify"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A){"use strict";function B(a){return!!a&&"function"==typeof a.extractGrade}function C(a){return"function"==typeof a.getEigenMetric}function D(a){if(o["default"](a))return a;if(m["default"](a))return a.length;if(r["default"](a))throw new Error("metric is undefined");if(C(a))return a.getEigenMetric().length;throw new Error("metric is undefined")}function E(a,b,d,e,f){var g=d.field;if(g.isField(a)&&B(b)){var h=[];h.push(c["default"](0,a,g));for(var i=0;i<b.blades.length;i++)h.push(b.blades[i]);return K(A["default"](h,g),d,e,f)}if(B(a)&&g.isField(b)){var h=[];h.push(c["default"](0,b,g));for(var i=0;i<a.blades.length;i++)h.push(a.blades[i]);return K(A["default"](h,g),d,e,f)}if(B(a)&&B(b)){for(var h=[],j=0;j<a.blades.length;j++)h.push(a.blades[j]);for(var i=0;i<b.blades.length;i++)h.push(b.blades[i]);return K(A["default"](h,g),d,e,f)}}function F(a,b,d,e,f){var g=d.field;if(g.isField(a)&&B(b)){var h=[];h.push(c["default"](0,a,g));for(var i=0;i<b.blades.length;i++)h.push(b.blades[i].__neg__());return K(A["default"](h,g),d,e,f)}if(B(a)&&g.isField(b)){var h=[];h.push(c["default"](0,g.neg(b),g));for(var i=0;i<a.blades.length;i++)h.push(a.blades[i]);return K(A["default"](h,g),d,e,f)}if(B(a)&&B(b)){for(var h=[],j=0;j<a.blades.length;j++)h.push(a.blades[j]);for(var i=0;i<b.blades.length;i++)h.push(b.blades[i].__neg__());return K(A["default"](h,g),d,e,f)}}function G(a,b,c,g,h){var i=c.field;if(i.isField(a)&&B(b))return b.mulByScalar(a);if(B(a)&&i.isField(b))return a.mulByScalar(b);if(B(a)&&B(b)){for(var j=[],k=0;k<a.blades.length;k++)for(var l=a.blades[k],n=0;n<b.blades.length;n++){var p=b.blades[n];if(o["default"](g)){var q=d["default"](l,p,i);j.push(q)}else if(m["default"](g)){var q=e["default"](l,p,g,i);j.push(q)}else for(var q=f["default"](l,p,g,i),r=0;r<q.length;r++)j.push(q[r])}return K(A["default"](j,i),c,g,h)}}function H(a,b,c){var d=c.field;if(d.isField(a)&&B(b))throw new Error("Multivector division is not yet supported. "+a+" / "+b);if(B(a)&&d.isField(b))return a.divByScalar(b);if(B(a)&&B(b)){if(p["default"](b))return a.divByScalar(b.scalarCoordinate());throw new Error("Multivector division is not yet supported. "+a+" / "+b)}}function I(a,b,d,e){y["default"]("index",a),x["default"]("algebra",b);var f=b.field,g=c["default"](1<<a,f.one,f);return K([g],b,d,e)}function J(a,b,d,e){x["default"]("algebra",b);var f=b.field;z["default"]("weight",f.isField(a),function(){return"be a field value"});var g=c["default"](0,a,f);return K([g],b,d,e)}function K(a,b,d,e){if(!m["default"](a))throw new Error("blades must be Blade<T>[]");if(r["default"](b))throw new Error("algebra must be defined");var f=b.field,n=function(c){for(var f=[],g=0;g<a.length;g++){var h=a[g];h.grade()===c&&f.push(h)}return K(f,b,d,e)},p={get blades(){return a},__abs__:function(){return p.scp(p.rev()).sqrt()},add:function(a){return E(p,a,b,d,e)},__add__:function(a){return E(p,a,b,d,e)},__radd__:function(a){return E(a,p,b,d,e)},sub:function(a){return F(p,a,b,d,e)},__sub__:function(a){return F(p,a,b,d,e)},__rsub__:function(a){return F(a,p,b,d,e)},__eq__:function(a){return s["default"](p,a,f)},__ge__:function(a){return t["default"](p,a,f)},__gt__:function(a){return u["default"](p,a,f)},__le__:function(a){return v["default"](p,a,f)},__lt__:function(a){return w["default"](p,a,f)},__ne__:function(a){return!s["default"](p,a,f)},inv:function(){var a=p.rev(),b=p.mul(a);if(1===b.blades.length&&0===b.blades[0].bitmap)return a.divByScalar(b.scalarCoordinate());throw new Error("non-invertible multivector (versor inverse) "+p)},isZero:function(){return 0===a.length},mul:function(a){return G(p,a,b,d,e)},mulByScalar:function(g){for(var h=[],i=0;i<a.length;i++){var j=a[i],k=f.mul(j.weight,g);f.isZero(k)||h.push(c["default"](j.bitmap,k,f))}return K(h,b,d,e)},__mul__:function(a){return G(p,a,b,d,e)},__rmul__:function(a){return G(a,p,b,d,e)},__div__:function(a){return H(p,a,b)},__lshift__:function(c){for(var j=[],k=0;k<a.length;k++)for(var l=a[k],n=0;n<c.blades.length;n++){var p=c.blades[n];if(o["default"](d)){var q=g["default"](l,p,f);j.push(q)}else if(m["default"](d)){var q=h["default"](l,p,d,f);j.push(q)}else for(var q=i["default"](l,p,d,f),r=0;r<q.length;r++)j.push(q[r])}return K(A["default"](j,f),b,d,e)},__rshift__:function(c){for(var g=[],h=0;h<a.length;h++)for(var i=a[h],n=0;n<c.blades.length;n++){var p=c.blades[n];if(o["default"](d)){var q=j["default"](i,p,f);g.push(q)}else if(m["default"](d)){var q=k["default"](i,p,d,f);g.push(q)}else for(var q=l["default"](i,p,d,f),r=0;r<q.length;r++)g.push(q[r])}return K(A["default"](g,f),b,d,e)},__vbar__:function(a){return p.__mul__(a).extractGrade(0)},__wedge__:function(c){for(var g=[],h=0;h<a.length;h++)for(var i=a[h],j=0;j<c.blades.length;j++){var k=c.blades[j],l=i.__wedge__(k);g.push(l)}return K(A["default"](g,f),b,d,e)},__bang__:function(){return p.inv()},__pos__:function(){return p},neg:function(){for(var c=[],f=0;f<a.length;f++){var g=a[f];c.push(g.__neg__())}return K(c,b,d,e)},__neg__:function(){for(var c=[],f=0;f<a.length;f++){var g=a[f];c.push(g.__neg__())}return K(c,b,d,e)},__tilde__:function(){return p.rev()},cliffordConjugate:function(){for(var c=[],f=0;f<a.length;f++){var g=a[f];c.push(g.cliffordConjugate())}return K(c,b,d,e)},compress:function(c){void 0===c&&(c=1e-12);for(var g=f.mulByNumber(f.one,c),h=f.zero,i=0;i<a.length;i++){var j=a[i];h=f.max(h,f.abs(j.weight))}for(var k=f.mul(h,g),l=[],i=0;i<a.length;i++){var j=a[i];f.ge(f.abs(j.weight),k)&&l.push(j)}return K(l,b,d,e)},direction:function(){var a=p.scp(p.rev()).scalarCoordinate(),b=f.sqrt(a);return f.isZero(b)?p:p.divByScalar(b)},exp:function(){var a=n(2),g=a.rev(),h=f.sqrt(a.__vbar__(g).scalarCoordinate()),i=a.divByScalar(h),j=K([c["default"](0,f.cos(h),f)],b,d,e),k=K([c["default"](0,f.sin(h),f)],b,d,e);return j.__add__(i.__mul__(k))},extractGrade:n,div:function(a){return p.mul(a.inv())},divByScalar:function(g){for(var h=[],i=0;i<a.length;i++){var j=a[i],k=f.div(j.weight,g);f.isZero(k)||h.push(c["default"](j.bitmap,k,f))}return K(h,b,d,e)},dual:function(){var a=D(d),g=K([c["default"]((1<<a)-1,f.one,f)],b,d,e);return p.__lshift__(g)},gradeInversion:function(){for(var c=[],f=0;f<a.length;f++){var g=a[f];c.push(g.gradeInversion())}return K(c,b,d,e)},rev:function(){for(var c=[],f=0;f<a.length;f++){var g=a[f];c.push(g.reverse())}return K(c,b,d,e)},scalarCoordinate:function(){for(var b=0;b<a.length;b++){var c=a[b];if(0===c.bitmap)return c.weight}return f.zero},scp:function(a){return p.__vbar__(a)},sqrt:function(){for(var g=[],h=0;h<a.length;h++){var i=a[h];if(0!==i.bitmap)throw new Error("sqrt on arbitrary multivectors is not yet supported.");g.push(c["default"](i.bitmap,f.sqrt(i.weight),f))}return K(g,b,d,e)},asString:function(b){if(L("names",b,D(d)),0===a.length)return"0";for(var c="",e=0;e<a.length;e++){var f=a[e],g=f.asString(b);0===e?c+=g:"-"===g.charAt(0)?(c+=" - ",c+=g.substring(1)):(c+=" + ",c+=g)}return c},toString:function(){return p.asString(e)}};return p}function L(a,b,c){if(n["default"](b)){if(!m["default"](b))throw new Error(a+" must be a string[]");if(b.length!==c)throw new Error(a+".length must match the dimensionality of the vector space.");for(var d=0;d<b.length;d++){var e=b[d];if(!q["default"](e))throw new Error(a+"["+d+"] must be a string.")}}}function M(a,b,c){x["default"]("metric",a);var d=D(a);x["default"]("field",b),L("labels",c,d);var e=[],f=[],g={get ε(){return e[2]},get field(){return b},get one(){return e[1]},get zero(){return e[0]},unit:function(a){if(y["default"]("index",a),a>=0&&a<d)return f[a];throw new Error("index must be in range [0 ... "+(d-1)+")")},get units(){return f.map(function(a){return a})}};e[0]=J(b.zero,g,a,c),e[1]=J(b.one,g,a,c),e[2]=J(b.ε,g,a,c);for(var h=0;h<d;h++)f[h]=I(h,g,a,c);return g}Object.defineProperty(b,"__esModule",{value:!0}),b.algebra=M}),b("geocas/config",["require","exports"],function(a,b){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var c=function(){function a(){this.GITHUB="https://github.com/geometryzen/GeoCAS",this.CREATED_AT="2016-09-24",this.MODIFIED_AT="2019-03-30",this.NAMESPACE="GeoCAS",this.VERSION="1.13.1"}return a.prototype.log=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.log(a)},a.prototype.info=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.info(a)},a.prototype.warn=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.warn(a)},a.prototype.error=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.error(a)},a}(),d=new c;b["default"]=d}),b("geocas",["require","exports","./geocas/mother/Blade","./geocas/mother/Complex","./geocas/mother/ComplexFieldAdapter","./geocas/mother/cosineOfAngleBetweenBlades","./geocas/mother/norm","./geocas/mother/NumberFieldAdapter","./geocas/mother/orthoFramesToVersor","./geocas/mother/Algebra","./geocas/config","./geocas/mother/squaredNorm"],function(a,b,c,d,e,f,g,h,i,j,k,l){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var m={get LAST_MODIFIED(){return k["default"].MODIFIED_AT},get VERSION(){return k["default"].VERSION},get blade(){return c["default"]},get complex(){return d["default"]},get ComplexFieldAdapter(){return e["default"]},get cosineOfAngleBetweenBlades(){return f["default"]},get norm(){return g["default"]},get NumberFieldAdapter(){return h["default"]},get orthoFramesToVersor(){return i["default"]},get algebra(){return j.algebra},get squaredNorm(){return l["default"]}};b["default"]=m});var f=d("geocas")["default"];"undefined"!=typeof module&&module.exports?module.exports=f:e?!function(a){a(function(){return f})}(e):a.GeoCAS=f}(this);