/*! geocas 2020-07-22 */
System.register("geocas/mother/Complex.js",["../checks/isNumber"],function(a,b){"use strict";function c(a,b){var e={get x(){return a},get y(){return b},__abs__:function(){return c(Math.sqrt(a*a+b*b),0)},__add__:function(d){return c(a+d.x,b+d.y)},__sub__:function(d){return c(a-d.x,b-d.y)},__mul__:function(e){return d["default"](e)?c(a*e,b*e):c(a*e.x-b*e.y,b*e.x+a*e.y)},__div__:function(e){if(d["default"](e))return c(a/e,b/e);var f=e.x*e.x+e.y*e.y;return c((a*e.x+b*e.y)/f,(b*e.x-a*e.y)/f)},__neg__:function(){return c(-a,-b)},toString:function(){return"["+a+", "+b+"]"},__cos__:function(){throw new Error("TODO: cos")},__sin__:function(){throw new Error("TODO: sin")}};return e}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/ComplexFieldAdapter.js",["./Complex","../checks/isNumber","../checks/mustBeNumber"],function(a,b){"use strict";var c,d,e,f,g;b&&b.id;return{setters:[function(a){c=a},function(a){d=a},function(a){e=a}],execute:function(){f=c["default"](0,0),g=function(){function a(a){void 0===a&&(a=1e-6),this._ε=c["default"](e["default"]("ε",a),0)}return Object.defineProperty(a.prototype,"ε",{get:function(){return this._ε},enumerable:!1,configurable:!0}),a.prototype.abs=function(a){return a.__abs__()},a.prototype.add=function(a,b){return a.__add__(b)},a.prototype.eq=function(a,b){return a.x===b.x&&a.y===b.y},a.prototype.ne=function(a,b){return a.x!==b.x||a.y!==b.y},a.prototype.le=function(a,b){return a.x<=b.x},a.prototype.lt=function(a,b){return a.x<b.x},a.prototype.ge=function(a,b){return a.x>=b.x},a.prototype.gt=function(a,b){return a.x>b.x},a.prototype.sub=function(a,b){return a.__sub__(b)},a.prototype.max=function(a,b){return a.x>=b.x?a:b},a.prototype.min=function(a,b){return a.x<=b.x?a:b},a.prototype.mul=function(a,b){return a.__mul__(b)},a.prototype.mulByNumber=function(a,b){return a.__mul__(b)},a.prototype.div=function(a,b){return a.__div__(b)},a.prototype.neg=function(a){return a.__neg__()},a.prototype.asString=function(a){return a.toString()},a.prototype.cos=function(a){return a.__cos__()},a.prototype.isField=function(a){return d["default"](a.x)&&d["default"](a.y)},a.prototype.isOne=function(a){return 1===a.x&&0===a.y},a.prototype.isZero=function(a){return 0===a.x&&0===a.y},Object.defineProperty(a.prototype,"one",{get:function(){return c["default"](1,0)},enumerable:!1,configurable:!0}),a.prototype.sin=function(a){return a.__sin__()},a.prototype.sqrt=function(a){if(0===a.x){if(0===a.y)return f;throw new Error("TODO: sqrt"+a.toString())}if(0===a.y)return a.x>0?c["default"](Math.sqrt(a.x),0):c["default"](0,Math.sqrt(-a.x));throw new Error("TODO: sqrt"+a.toString())},Object.defineProperty(a.prototype,"zero",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),a("default",g)}}}),System.register("geocas/checks/mustBeNumber.js",["../checks/mustSatisfy","../checks/isNumber"],function(a,b){"use strict";function c(){return"be a `number`"}function d(a,b,d){return e["default"](a,f["default"](b),c,d),b}var e,f;b&&b.id;return a("default",d),{setters:[function(a){e=a},function(a){f=a}],execute:function(){}}}),System.register("geocas/mother/NumberFieldAdapter.js",["../checks/mustBeNumber"],function(a,b){"use strict";var c,d;b&&b.id;return{setters:[function(a){c=a}],execute:function(){d=function(){function a(a){void 0===a&&(a=1e-6),this._ε=c["default"]("ε",a)}return Object.defineProperty(a.prototype,"ε",{get:function(){return this._ε},enumerable:!1,configurable:!0}),a.prototype.abs=function(a){return Math.abs(a)},a.prototype.add=function(a,b){return a+b},a.prototype.eq=function(a,b){return a===b},a.prototype.ne=function(a,b){return a!==b},a.prototype.le=function(a,b){return a<=b},a.prototype.lt=function(a,b){return a<b},a.prototype.ge=function(a,b){return a>=b},a.prototype.gt=function(a,b){return a>b},a.prototype.sub=function(a,b){return a-b},a.prototype.max=function(a,b){return Math.max(a,b)},a.prototype.min=function(a,b){return Math.min(a,b)},a.prototype.mul=function(a,b){return a*b},a.prototype.mulByNumber=function(a,b){return a*b},a.prototype.div=function(a,b){return a/b},a.prototype.neg=function(a){return-a},a.prototype.asString=function(a){return a.toString()},a.prototype.cos=function(a){return Math.cos(a)},a.prototype.isField=function(a){return"number"==typeof a},a.prototype.isOne=function(a){return 1===a},a.prototype.isZero=function(a){return 0===a},Object.defineProperty(a.prototype,"one",{get:function(){return 1},enumerable:!1,configurable:!0}),a.prototype.sin=function(a){return Math.sin(a)},a.prototype.sqrt=function(a){return Math.sqrt(a)},Object.defineProperty(a.prototype,"zero",{get:function(){return 0},enumerable:!1,configurable:!0}),a}(),a("default",d)}}}),System.register("geocas/mother/norm.js",["./squaredNorm"],function(a,b){"use strict";function c(a){return d["default"](a).sqrt()}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/cosineOfAngleBetweenBlades.js",["./norm"],function(a,b){"use strict";function c(a,b){var c=d["default"](a).scalarCoordinate(),e=d["default"](b).scalarCoordinate();return a.scp(b.rev()).divByScalar(c).divByScalar(e)}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/orthoFramesToVersor.js",["./cosineOfAngleBetweenBlades"],function(a,b){"use strict";function c(a,b,h,i){if(a.length>0){var j=f(a,b,i),k=a[j],l=b[j],m=k.sub(l),n=i.field,o=n.mulByNumber(n.one,1e-6),p=g["default"](k,l).sub(i.one).scalarCoordinate(),q=n.lt(n.abs(p),o);if(q)return c(e(a,j),e(b,j),h,i);var r=m.scp(m).scalarCoordinate(),s=d(h,m.divByScalar(i.field.sqrt(r)));return c(e(a,j).map(function(a){return m.mul(a.mul(m)).neg().divByScalar(r)}),e(b,j),s,i)}return h}function d(a,b){var c=[];c.push(b);for(var d=0;d<a.length;d++)c.push(a[d]);return c}function e(a,b){for(var c=[],d=0;d<a.length;d++)d!==b&&c.push(a[d]);return c}function f(a,b,c){for(var d=a.length,e=c.zero,f=0,g=0;g<d;g++){var h=a[g].sub(b[g]),i=h.scp(h.rev()).scalarCoordinate();c.field.gt(i,e.scalarCoordinate())&&(f=g)}return f}var g;b&&b.id;return a("default",c),{setters:[function(a){g=a}],execute:function(){}}}),System.register("geocas/mother/lcoE.js",["./gpE","./grade"],function(a,b){"use strict";function c(a,b,c){var f=a.grade(),g=b.grade();if(f>g)return a.zero();var h=a.bitmap^b.bitmap,i=e["default"](h);return i!==g-f?a.zero():d["default"](a,b,c)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/lcoL.js",["./gpL","./grade"],function(a,b){"use strict";function c(a,b,c,f){var g=a.grade(),h=b.grade();if(g>h)return a.zero();var i=a.bitmap^b.bitmap,j=e["default"](i);return j!==h-g?a.zero():d["default"](a,b,c,f)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/lcoG.js",["./gpG","./grade"],function(a,b){"use strict";function c(a,b,c,f){var g=a.grade(),h=b.grade();if(g>h)return[];var i=a.bitmap^b.bitmap,j=e["default"](i);return j!==h-g?[]:d["default"](a,b,c,f)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/rcoE.js",["./gpE","./grade"],function(a,b){"use strict";function c(a,b,c){var f=a.grade(),g=b.grade();if(f<g)return a.zero();var h=a.bitmap^b.bitmap,i=e["default"](h);return i!==f-g?a.zero():d["default"](a,b,c)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/rcoL.js",["./gpL","./grade"],function(a,b){"use strict";function c(a,b,c,f){var g=a.grade(),h=b.grade();if(g<h)return a.zero();var i=a.bitmap^b.bitmap,j=e["default"](i);return j!==g-h?a.zero():d["default"](a,b,c,f)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/gpE.js",["./Blade","./canonicalReorderingSign"],function(a,b){"use strict";function c(a,b,c){var f=a.bitmap^b.bitmap,g=e["default"](a.bitmap,b.bitmap),h=c.mul(a.weight,b.weight);return g>0?d["default"](f,h,c):d["default"](f,c.neg(h),c)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/gpL.js",["./Blade","./gpE"],function(a,b){"use strict";function c(a,b,c,f){for(var g=e["default"](a,b,f),h=g.weight,i=a.bitmap&b.bitmap,j=0;0!==i;)0!==(1&i)&&(h=f.mulByNumber(h,c[j])),j++,i>>=1;return d["default"](g.bitmap,h,f)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/gpG.js",["./gpL","./simplify"],function(a,b){"use strict";function c(a,b,c,f){for(var g=c.toEigenBasis(a),h=c.toEigenBasis(b),i=c.getEigenMetric(),j=[],k=0;k<g.length;k++)for(var l=0;l<h.length;l++)j.push(d["default"](g[k],h[l],i,f));return c.toMetricBasis(e["default"](j,f))}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/grade.js",["./bitCount"],function(a,b){"use strict";function c(a){return d["default"](a)}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/rcoG.js",["./gpG","./grade"],function(a,b){"use strict";function c(a,b,c,f){var g=a.grade(),h=b.grade();if(g<h)return[];var i=a.bitmap^b.bitmap,j=e["default"](i);return j!==g-h?[]:d["default"](a,b,c,f)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/checks/isArray.js",[],function(a,b){"use strict";function c(a){return"[object Array]"===Object.prototype.toString.call(a)}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/checks/isString.js",[],function(a,b){"use strict";function c(a){return"string"==typeof a}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/sortBlades.js",[],function(a,b){"use strict";function c(a,b){return a.bitmap<b.bitmap?-1:a.bitmap>b.bitmap?1:0}function d(a){for(var b=[],d=0;d<a.length;d++){var e=a[d];b.push(e)}return b.sort(c),b}b&&b.id;return a("default",d),{setters:[],execute:function(){}}}),System.register("geocas/mother/multivectorEQ.js",["./sortBlades"],function(a,b){"use strict";function c(a,b,c){if(a.blades.length===b.blades.length){for(var e=d["default"](a.blades),f=d["default"](b.blades),g=e.length,h=0;h<g;h++){var i=e[h],j=f[h];if(i.bitmap!==j.bitmap)return!1;if(c.ne(i.weight,j.weight))return!1}return!0}return!1}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/multivectorGE.js",["./isScalar"],function(a,b){"use strict";function c(a,b,c){if(d["default"](a)&&d["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return c.ge(e,f)}throw new Error(a+" >= "+b+" is not implemented.")}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/multivectorGT.js",["./isScalar"],function(a,b){"use strict";function c(a,b,c){if(d["default"](a)&&d["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return c.gt(e,f)}throw new Error(a+" > "+b+" is not implemented.")}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/multivectorLE.js",["./isScalar"],function(a,b){"use strict";function c(a,b,c){if(d["default"](a)&&d["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return c.le(e,f)}throw new Error(a+" <= "+b+" is not implemented.")}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/mother/isScalar.js",[],function(a,b){"use strict";function c(a){for(var b=a.blades,c=b.length,d=0;d<c;d++){var e=b[d];if(0!==e.bitmap)return!1}return!0}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/multivectorLT.js",["./isScalar"],function(a,b){"use strict";function c(a,b,c){if(d["default"](a)&&d["default"](b)){var e=a.scalarCoordinate(),f=b.scalarCoordinate();return c.lt(e,f)}throw new Error(a+" < "+b+" is not implemented.")}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/checks/isDefined.js",[],function(a,b){"use strict";function c(a){return"undefined"!=typeof a}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/checks/mustBeDefined.js",["../checks/mustSatisfy","../checks/isDefined"],function(a,b){"use strict";function c(){return"not be 'undefined'"}function d(a,b,d){return e["default"](a,f["default"](b),c,d),b}var e,f;b&&b.id;return a("default",d),{setters:[function(a){e=a},function(a){f=a}],execute:function(){}}}),System.register("geocas/checks/isNumber.js",[],function(a,b){"use strict";function c(a){return"number"==typeof a}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/checks/isInteger.js",["../checks/isNumber"],function(a,b){"use strict";function c(a){return d["default"](a)&&a%1===0}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/checks/mustBeInteger.js",["../checks/mustSatisfy","../checks/isInteger"],function(a,b){"use strict";function c(){return"be an integer"}function d(a,b,d){return e["default"](a,f["default"](b),c,d),b}var e,f;b&&b.id;return a("default",d),{setters:[function(a){e=a},function(a){f=a}],execute:function(){}}}),System.register("geocas/checks/mustSatisfy.js",[],function(a,b){"use strict";function c(a,b,c,d){if(!b){var e=c?c():"satisfy some condition",f=d?" in "+d():"";throw new Error(a+" must "+e+f+".")}}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/bitCount.js",[],function(a,b){"use strict";function c(a){return a-=a>>1&1431655765,a=(858993459&a)+(a>>2&858993459),a=a+(a>>4)&252645135,a+=a>>8,a+=a>>16,63&a}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/canonicalReorderingSign.js",["./bitCount"],function(a,b){"use strict";function c(a,b){a>>=1;for(var c=0;0!==a;)c+=d["default"](a&b),a>>=1;return 0===(1&c)?1:-1}var d;b&&b.id;return a("default",c),{setters:[function(a){d=a}],execute:function(){}}}),System.register("geocas/checks/isUndefined.js",[],function(a,b){"use strict";function c(a){return"undefined"==typeof a}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/minusOnePow.js",[],function(a,b){"use strict";function c(a){return 0===(1&a)?1:-1}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/Blade.js",["./bitCount","./canonicalReorderingSign","../checks/isUndefined","./minusOnePow"],function(a,b){"use strict";function c(a,b,i){var j={get bitmap(){return a},get weight(){return b},__neg__:function(){return c(a,i.neg(b),i)},__vbar__:function(d,e){return a!==d.bitmap?c(h,i.zero,i):c(h,i.mul(b,d.weight),i)},__wedge__:function(d){if(a&d.bitmap)return c(h,i.zero,i);var f=a^d.bitmap,g=e["default"](a,d.bitmap),j=i.mul(b,d.weight);return c(f,g>0?j:i.neg(j),i)},grade:function(){return d["default"](a)},reverse:function(){var d=j.grade(),e=g["default"](d*(d-1)/2);return c(a,e>0?b:i.neg(b),i)},gradeInversion:function(){var d=j.grade(),e=g["default"](d);return c(a,e>0?b:i.neg(b),i)},cliffordConjugate:function(){var d=j.grade(),e=g["default"](d*(d+1)/2);return c(a,e>0?b:i.neg(b),i)},zero:function(){return c(h,i.zero,i)},asString:function(c){for(var d="",e=1,g=a;0!==g;)0!==(1&g)&&(d.length>0&&(d+=" ^ "),f["default"](c)||null===c||e>c.length||null==c[e-1]?d=d+"e"+e:d+=c[e-1]),g>>=1,e++;return 0===d.length?i.asString(b):i.isOne(b)?d:i.asString(b)+" * "+d},toString:function(){return j.asString(void 0)}};return j}var d,e,f,g,h;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a}],execute:function(){h=0}}}),System.register("geocas/mother/bladesToArray.js",[],function(a,b){"use strict";function c(a){for(var b=Object.keys(a),c=[],d=0;d<b.length;d++){var e=b[d],f=a[e];c.push(f)}return c}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas/mother/simplify.js",["./Blade","./bladesToArray"],function(a,b){"use strict";function c(a,b){for(var c={},f=0;f<a.length;f++){var g=a[f],h=c[g.bitmap];if(h){var i=b.add(h.weight,g.weight);b.isZero(i)?delete c[g.bitmap]:c[g.bitmap]=d["default"](g.bitmap,i,b)}else b.isZero(g.weight)||(c[g.bitmap]=g)}return e["default"](c)}var d,e;b&&b.id;return a("default",c),{setters:[function(a){d=a},function(a){e=a}],execute:function(){}}}),System.register("geocas/mother/Algebra.js",["./Blade","./gpE","./gpL","./gpG","./lcoE","./lcoL","./lcoG","./rcoE","./rcoL","./rcoG","../checks/isArray","../checks/isDefined","../checks/isNumber","./isScalar","../checks/isString","../checks/isUndefined","./multivectorEQ","./multivectorGE","./multivectorGT","./multivectorLE","./multivectorLT","../checks/mustBeDefined","../checks/mustBeInteger","../checks/mustSatisfy","./simplify"],function(a,b){"use strict";function c(a){return!!a&&"function"==typeof a.extractGrade}function d(a){return"function"==typeof a.getEigenMetric}function e(a){if(A["default"](a))return a;if(y["default"](a))return a.length;if(D["default"](a))throw new Error("metric is undefined");if(d(a))return a.getEigenMetric().length;throw new Error("metric is undefined")}function f(a,b,d,e,f){var g=d.field;if(g.isField(a)&&c(b)){var h=[];h.push(o["default"](0,a,g));for(var i=0;i<b.blades.length;i++)h.push(b.blades[i]);return l(M["default"](h,g),d,e,f)}if(c(a)&&g.isField(b)){var h=[];h.push(o["default"](0,b,g));for(var i=0;i<a.blades.length;i++)h.push(a.blades[i]);return l(M["default"](h,g),d,e,f)}if(c(a)&&c(b)){for(var h=[],j=0;j<a.blades.length;j++)h.push(a.blades[j]);for(var i=0;i<b.blades.length;i++)h.push(b.blades[i]);return l(M["default"](h,g),d,e,f)}}function g(a,b,d,e,f){var g=d.field;if(g.isField(a)&&c(b)){var h=[];h.push(o["default"](0,a,g));for(var i=0;i<b.blades.length;i++)h.push(b.blades[i].__neg__());return l(M["default"](h,g),d,e,f)}if(c(a)&&g.isField(b)){var h=[];h.push(o["default"](0,g.neg(b),g));for(var i=0;i<a.blades.length;i++)h.push(a.blades[i]);return l(M["default"](h,g),d,e,f)}if(c(a)&&c(b)){for(var h=[],j=0;j<a.blades.length;j++)h.push(a.blades[j]);for(var i=0;i<b.blades.length;i++)h.push(b.blades[i].__neg__());return l(M["default"](h,g),d,e,f)}}function h(a,b,d,e,f){var g=d.field;if(g.isField(a)&&c(b))return b.mulByScalar(a);if(c(a)&&g.isField(b))return a.mulByScalar(b);if(c(a)&&c(b)){for(var h=[],i=0;i<a.blades.length;i++)for(var j=a.blades[i],k=0;k<b.blades.length;k++){var m=b.blades[k];if(A["default"](e)){var n=p["default"](j,m,g);h.push(n)}else if(y["default"](e)){var n=q["default"](j,m,e,g);h.push(n)}else for(var n=r["default"](j,m,e,g),o=0;o<n.length;o++)h.push(n[o])}return l(M["default"](h,g),d,e,f)}}function i(a,b,d){var e=d.field;if(e.isField(a)&&c(b))throw new Error("Multivector division is not yet supported. "+a+" / "+b);if(c(a)&&e.isField(b))return a.divByScalar(b);if(c(a)&&c(b)){if(B["default"](b))return a.divByScalar(b.scalarCoordinate());throw new Error("Multivector division is not yet supported. "+a+" / "+b)}}function j(a,b,c,d){K["default"]("index",a),J["default"]("algebra",b);var e=b.field,f=o["default"](1<<a,e.one,e);return l([f],b,c,d)}function k(a,b,c,d){J["default"]("algebra",b);var e=b.field;L["default"]("weight",e.isField(a),function(){return"be a field value"});var f=o["default"](0,a,e);return l([f],b,c,d)}function l(a,b,c,d){if(!y["default"](a))throw new Error("blades must be Blade<T>[]");if(D["default"](b))throw new Error("algebra must be defined");var j=b.field,k=function(e){for(var f=[],g=0;g<a.length;g++){var h=a[g];h.grade()===e&&f.push(h)}return l(f,b,c,d)},n={get blades(){return a},__abs__:function(){return n.scp(n.rev()).sqrt()},add:function(a){return f(n,a,b,c,d)},__add__:function(a){return f(n,a,b,c,d)},__radd__:function(a){return f(a,n,b,c,d)},sub:function(a){return g(n,a,b,c,d)},__sub__:function(a){return g(n,a,b,c,d)},__rsub__:function(a){return g(a,n,b,c,d)},__eq__:function(a){return E["default"](n,a,j)},__ge__:function(a){return F["default"](n,a,j)},__gt__:function(a){return G["default"](n,a,j)},__le__:function(a){return H["default"](n,a,j)},__lt__:function(a){return I["default"](n,a,j)},__ne__:function(a){return!E["default"](n,a,j)},inv:function(){var a=n.rev(),b=n.mul(a);if(1===b.blades.length&&0===b.blades[0].bitmap)return a.divByScalar(b.scalarCoordinate());throw new Error("non-invertible multivector (versor inverse) "+n)},isZero:function(){return 0===a.length},mul:function(a){return h(n,a,b,c,d)},mulByScalar:function(e){for(var f=[],g=0;g<a.length;g++){var h=a[g],i=j.mul(h.weight,e);j.isZero(i)||f.push(o["default"](h.bitmap,i,j))}return l(f,b,c,d)},__mul__:function(a){return h(n,a,b,c,d)},__rmul__:function(a){return h(a,n,b,c,d)},__div__:function(a){return i(n,a,b)},__lshift__:function(e){for(var f=[],g=0;g<a.length;g++)for(var h=a[g],i=0;i<e.blades.length;i++){var k=e.blades[i];if(A["default"](c)){var m=s["default"](h,k,j);f.push(m)}else if(y["default"](c)){var m=t["default"](h,k,c,j);f.push(m)}else for(var m=u["default"](h,k,c,j),n=0;n<m.length;n++)f.push(m[n])}return l(M["default"](f,j),b,c,d)},__rshift__:function(e){for(var f=[],g=0;g<a.length;g++)for(var h=a[g],i=0;i<e.blades.length;i++){var k=e.blades[i];if(A["default"](c)){var m=v["default"](h,k,j);f.push(m)}else if(y["default"](c)){var m=w["default"](h,k,c,j);f.push(m)}else for(var m=x["default"](h,k,c,j),n=0;n<m.length;n++)f.push(m[n])}return l(M["default"](f,j),b,c,d)},__vbar__:function(a){return n.__mul__(a).extractGrade(0)},__wedge__:function(e){for(var f=[],g=0;g<a.length;g++)for(var h=a[g],i=0;i<e.blades.length;i++){var k=e.blades[i],m=h.__wedge__(k);f.push(m)}return l(M["default"](f,j),b,c,d)},__bang__:function(){return n.inv()},__pos__:function(){return n},neg:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];e.push(g.__neg__())}return l(e,b,c,d)},__neg__:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];e.push(g.__neg__())}return l(e,b,c,d)},__tilde__:function(){return n.rev()},cliffordConjugate:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];e.push(g.cliffordConjugate())}return l(e,b,c,d)},compress:function(e){void 0===e&&(e=1e-12);for(var f=j.mulByNumber(j.one,e),g=j.zero,h=0;h<a.length;h++){var i=a[h];g=j.max(g,j.abs(i.weight))}for(var k=j.mul(g,f),m=[],h=0;h<a.length;h++){var i=a[h];j.ge(j.abs(i.weight),k)&&m.push(i)}return l(m,b,c,d)},direction:function(){var a=n.scp(n.rev()).scalarCoordinate(),b=j.sqrt(a);return j.isZero(b)?n:n.divByScalar(b)},exp:function(){var a=k(2),e=a.rev(),f=j.sqrt(a.__vbar__(e).scalarCoordinate()),g=a.divByScalar(f),h=l([o["default"](0,j.cos(f),j)],b,c,d),i=l([o["default"](0,j.sin(f),j)],b,c,d);return h.__add__(g.__mul__(i))},extractGrade:k,div:function(a){return n.mul(a.inv())},divByScalar:function(e){for(var f=[],g=0;g<a.length;g++){var h=a[g],i=j.div(h.weight,e);j.isZero(i)||f.push(o["default"](h.bitmap,i,j))}return l(f,b,c,d)},dual:function(){var a=e(c),f=l([o["default"]((1<<a)-1,j.one,j)],b,c,d);return n.__lshift__(f)},gradeInversion:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];e.push(g.gradeInversion())}return l(e,b,c,d)},rev:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];e.push(g.reverse())}return l(e,b,c,d)},scalarCoordinate:function(){for(var b=0;b<a.length;b++){var c=a[b];if(0===c.bitmap)return c.weight}return j.zero},scp:function(a){return n.__vbar__(a)},sqrt:function(){for(var e=[],f=0;f<a.length;f++){var g=a[f];if(0!==g.bitmap)throw new Error("sqrt on arbitrary multivectors is not yet supported.");e.push(o["default"](g.bitmap,j.sqrt(g.weight),j))}return l(e,b,c,d)},asString:function(b){if(m("names",b,e(c)),0===a.length)return"0";for(var d="",f=0;f<a.length;f++){var g=a[f],h=g.asString(b);0===f?d+=h:"-"===h.charAt(0)?(d+=" - ",d+=h.substring(1)):(d+=" + ",d+=h)}return d},toString:function(){return n.asString(d)}};return n}function m(a,b,c){if(z["default"](b)){if(!y["default"](b))throw new Error(a+" must be a string[]");if(b.length!==c)throw new Error(a+".length must match the dimensionality of the vector space.");for(var d=0;d<b.length;d++){var e=b[d];if(!C["default"](e))throw new Error(a+"["+d+"] must be a string.")}}}function n(a,b,c){J["default"]("metric",a);var d=e(a);J["default"]("field",b),m("labels",c,d);var f=[],g=[],h={get ε(){return f[2]},get field(){return b},get one(){return f[1]},get zero(){return f[0]},unit:function(a){if(K["default"]("index",a),a>=0&&a<d)return g[a];throw new Error("index must be in range [0 ... "+(d-1)+")")},get units(){return g.map(function(a){return a})}};f[0]=k(b.zero,h,a,c),f[1]=k(b.one,h,a,c),f[2]=k(b.ε,h,a,c);for(var i=0;i<d;i++)g[i]=j(i,h,a,c);return h}var o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M;b&&b.id;return a("algebra",n),{setters:[function(a){o=a},function(a){p=a},function(a){q=a},function(a){r=a},function(a){s=a},function(a){t=a},function(a){u=a},function(a){v=a},function(a){w=a},function(a){x=a},function(a){y=a},function(a){z=a},function(a){A=a},function(a){B=a},function(a){C=a},function(a){D=a},function(a){E=a},function(a){F=a},function(a){G=a},function(a){H=a},function(a){I=a},function(a){J=a},function(a){K=a},function(a){L=a},function(a){M=a}],execute:function(){}}}),System.register("geocas/config.js",[],function(a,b){"use strict";var c,d;b&&b.id;return{setters:[],execute:function(){c=function(){function a(){this.GITHUB="https://github.com/geometryzen/GeoCAS",this.CREATED_AT="2016-09-24",this.MODIFIED_AT="2019-03-30",this.NAMESPACE="GeoCAS",this.VERSION="1.13.1"}return a.prototype.log=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.log(a)},a.prototype.info=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.info(a)},a.prototype.warn=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.warn(a)},a.prototype.error=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];console.error(a)},a}(),d=new c,a("default",d)}}}),System.register("geocas/mother/squaredNorm.js",[],function(a,b){"use strict";function c(a){return a.scp(a.rev())}b&&b.id;return a("default",c),{setters:[],execute:function(){}}}),System.register("geocas.js",["./geocas/mother/Blade","./geocas/mother/Complex","./geocas/mother/ComplexFieldAdapter","./geocas/mother/cosineOfAngleBetweenBlades","./geocas/mother/norm","./geocas/mother/NumberFieldAdapter","./geocas/mother/orthoFramesToVersor","./geocas/mother/Algebra","./geocas/config","./geocas/mother/squaredNorm"],function(a,b){"use strict";var c,d,e,f,g,h,i,j,k,l,m;b&&b.id;return{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a},function(a){i=a},function(a){j=a},function(a){k=a},function(a){l=a}],execute:function(){m={get LAST_MODIFIED(){return k["default"].MODIFIED_AT},get VERSION(){return k["default"].VERSION},get blade(){return c["default"]},get complex(){return d["default"]},get ComplexFieldAdapter(){return e["default"]},get cosineOfAngleBetweenBlades(){return f["default"]},get norm(){return g["default"]},get NumberFieldAdapter(){return h["default"]},get orthoFramesToVersor(){return i["default"]},get algebra(){return j.algebra},get squaredNorm(){return l["default"]}},a("default",m)}}});